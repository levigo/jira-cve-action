const core = require('@actions/core');
// const core = require("./mockCore.js");

const https = require("https");

const basicAuth = (username, password) => {
  const b = Buffer.from(`${username}:${password}`);
  return b.toString('base64');
}

module.exports = {
  getRequest: function (path) {
    return new Promise((resolve, reject) => {
      const options = {
        hostname: core.getInput('jiraBaseUrl'),
        path: path,
        method: 'GET',
        headers: {
          'Authorization': `Basic ${basicAuth(core.getInput('jiraUser'), core.getInput('jiraUserToken'))}`
        },
      };

      const req = https.request(options, (res) => {
        let response = "";
        res.setEncoding('utf8');
        res.on('data', (chunk) => {
          response += chunk;
        });
        res.on('end', () => {
          resolve(JSON.parse(response));
        });
      });

      req.on('error', (e) => {
        console.error(`Problem with request: ${e.message}`);
        reject(e);
      });

      req.end();
    });
  },

  bodyRequest: function (path, bodyData, method) {
    return new Promise((resolve, reject) => {
      const options = {
        hostname: core.getInput('jiraBaseUrl'),
        path: path,
        method: method,
        headers: {
          'Authorization': `Basic ${basicAuth(core.getInput('jiraUser'), core.getInput('jiraUserToken'))}`,
          'Content-Type': 'application/json',
          'Content-Length': Buffer.byteLength(bodyData),
        },
      };

      const req = https.request(options, (res) => {
        resolve(res.statusCode);
      });

      req.on('error', (e) => {
        console.error(`Problem with request: ${e.message}`);
        reject(e);
      });

      req.write(bodyData);

      req.end();
    });
  },

  bodyRequestWithResult: function (path, bodyData, method) {
    return new Promise((resolve, reject) => {
      const options = {
        hostname: core.getInput('jiraBaseUrl'),
        path: path,
        method: method,
        headers: {
          'Authorization': `Basic ${basicAuth(core.getInput('jiraUser'), core.getInput('jiraUserToken'))}`,
          'Content-Type': 'application/json',
          'Content-Length': Buffer.byteLength(bodyData),
        },
      };

      const req = https.request(options, (res) => {
        let response = "";
        res.setEncoding('utf8');
        res.on('data', (chunk) => {
          response += chunk;
        });
        res.on('end', () => {
          resolve(JSON.parse(response));
        });
      });

      req.on('error', (e) => {
        console.error(`Problem with request: ${e.message}`);
        reject(e);
      });

      req.write(bodyData);

      req.end();
    });
  }
}